#ifndef EVALUATOR_H
#define EVALUATOR_H

#include <iostream>
#include "board.h"

class Evaluator {
    private:
    char knight_map[8][8] = {{0, 0, 2, 2, 2, 2,-4, 0},
                       {1, 2, 3, 3, 3, 3, 2, 1},
                       {2, 3, 4, 4, 4, 4, 3, 2},
                       {2, 3, 4, 4, 4, 4, 3, 2},
                       {2, 3, 4, 4, 4, 4, 3, 2},
                       {2, 3, 4, 4, 4, 4, 3, 2},
                       {1, 2, 3, 3, 3, 3, 2, 1},
                       {0, 1, 2, 2, 2, 2, 1, 0}};

    char king_map[8][8] = {{3, 9, 3, 1, 1, 3, 9, 3},
                       {3, 3, 2, 1, 1, 2, 3, 3},
                       {2, 1, 1, 1, 1, 1, 1, 2},
                       {1, 0, 0,-1,-1, 0, 0, 1},
                       {0,-1,-1,-2,-2,-1,-1, 0},
                      {-1,-2,-2,-3,-3,-2,-2,-1},
                      {-2,-3,-3,-4,-4,-3,-3,-2},
                      {-3,-4,-4,-5,-5,-4,-4,-3}};

    char queen_map[8][8] = {{-3,-2,-2,-1,-1,-2,-2,-3},
                      {-2,-1, 1, 2, 2, 1,-1,-2},
                       {0, 1, 2, 2, 2, 2, 1, 0},
                       {1, 2, 2, 2, 2, 2, 2, 1},
                       {1, 2, 2, 2, 2, 2, 2, 1},
                       {0, 1, 2, 2, 2, 2, 1, 0},
                      {-2,-1, 1, 2, 2, 1,-1,-2},
                      {-3,-2,-2,-1,-1,-2,-2,-3}};
    
    char rook_map[8][8] = {{-1,-1, 0, 1, 1, 0,-1,-3},
                      {-1,0, 0, 0, 0, 0, 0,-1},
                      {-1,0, 0, 0, 0, 0, 0,-1},
                      {-1,0, 0, 0, 0, 0, 0,-1},
                      {-1,0, 0, 0, 0, 0, 0,-1},
                      {-1,0, 0, 0, 0, 0, 0,-1},
                      {0, 2, 2, 2, 2, 2, 2, 0},
                      {-1,-1,-1,-1,-1,-1,-1,-1}};
    
    char bishop_map[8][8] = {{1, 0, 0, 0, 0,-4, 0, 1},
                       {0, 3, 1, 1, 1, 1, 3, 0},
                       {0, 1, 1, 1, 1, 1, 1, 0},
                       {0, 1, 2, 1, 1, 2, 1, 0},
                       {0, 1, 1, 2, 2, 1, 1, 0},
                       {0, 1, 1, 2, 2, 1, 1, 0},
                       {0, 1, 1, 1, 1, 1, 1, 0},
                       {-1,0, 0, 0, 0, 0, 0,-1}};

    char pawn_map[8][8] = {{0, 0, 0, 0, 0, 0, 0, 0},
                         {1, 1, 1,-2,-2, 4, 4, 4},
                         {0,-1,-1, 0, 0,-1,-1,-1},
                         {0, 0, 0, 1, 1,-1,-1,-1},
                         {0, 0, 0, 1, 1, 0, 0, 0},
                         {0, 0, 1, 2, 2, 1, 0, 0},
                         {4, 4, 4, 4, 4, 4, 4, 4},
                         {4, 4, 4, 4, 4, 4, 4, 4}};
    

    public:
    Evaluator();
    ~Evaluator();
    int evaluate(Board board, Move * legal_moves, bool verbose);
    int evaluateC(Board& board, std::vector<MovC>& legal_moves, bool verbose);
    int is_game_over(Board board, Move * legal_moves);
    int is_game_overC(Board& board, std::vector<MovC>& legal_moves);
};

#endif